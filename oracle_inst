#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2012             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


oracle_free_session_slots_levels   = (30, 20)

def inventory_oracle_inst(info):
    return [ (line[0], "", 'oracle_free_session_slots_levels') for line in info ]

# Example for output from plugin:
# BD02 1 20-JUN-2008 BD02.WORLD BD02 zbghora10 10.2.0.2.0 OPEN STARTED NO 0 0 122 PRIMARY YES
# 0: Instance name
# 1: Thread number
# 2: Running since
# 3:
# 4:
# 5: Host
# 6: ORACLE Version
# 7: state (must be 'OPEN')
# 8:
# 9:
# 10: Files for recovery (CRIT if not 0)
# 11: table spaces with logging (CRIT if not 0)
# 12: number of free session slots (WARN/CRIT is check parameter)
# 13: database type STANDBY/PRIMARY
# 14: flashback enabled YES/NO/N/A


def check_oracle_inst(inst, params, info):
    try:
        warn, crit = params
    except:
        warn, crit = oracle_free_session_slots_levels

    for line in info:
        if line[0] == inst:
            try:
                if len(line) >= 8 and (( line[7] == "OPEN" )
                                    or ( line[7] == "MOUNTED" and line[13] == "STANDBY")):
                    since   = line[2]
                    release = line[6]
                    db_state = line[7]
                    recover_files = int(line[10])
                    logging_ts = int(line[11])
                    freeslots = int(line[12])
                    db_type = line[13]

                    if len(line) > 14:
                        fb_state = line[14]
                    else:
                        fb_state = "N/A"

                    perfdata=[ ("freeslots", str(freeslots), warn, crit) ]

                    infotxt = ""
                    status = 0
                    statustxt = "OK"
                    if freeslots < crit:
                        infotxt += " - only %d free session slots" % freeslots
                        statustxt = "CRIT"
                        status = 2
                    elif freeslots < warn:
                        infotxt += " - only %d free session slots" % freeslots
                        statustxt = "WARNING"
                        status = 1
                    if recover_files > 0:
                        infotxt += " - %d recover files" % recover_files
                        statustxt = "CRIT"
                        status = 2
                    if logging_ts > 0:
                        infotxt += " - %d tables spaces with logging" % logging_ts
                        statustxt = "CRIT"
                        status = 2
                    if fb_state == "NO":
                        infotxt += " - flashback is deactivated"
                        statustxt = "WARNING"
                        status = 1
                    if db_type == "STANDBY" and line[7] == "OPEN":
                        infotxt += " - standby is open readonly"
                        statustxt = "CRIT"
                        status = 2
                    return (status, (statustxt + " - Type %s State %s Release %s FB %s" + infotxt)
                            % (db_type, db_state, release, fb_state), perfdata)
                else:
                    return (2, "CRIT - Cannot login: %s %s %s" % (line[1], line[2], line[3]))
            except IndexError:
                return (2, "CRIT - Incomplete output from plugin: %s" % (" ".join(line)))

    return (2, "CRIT - ora_pmon_%s not running" % inst)


check_info['oracle_inst'] = (
    check_oracle_inst,
    "DB_%s",
    1,
    inventory_oracle_inst)
