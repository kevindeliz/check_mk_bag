#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# +------------------------------------------------------------------+
# | The initial version of this file has been contributed by:        |
# |                                                                  |
# | JR Morgan <liveaverage@gmail.com>                                |
# +------------------------------------------------------------------+

ra4e_sensor_temp_defaultlevels = (28, 32)

def inventory_ra4e_sensor_temp(info):
    inventory = []
    for tempc, tempf, desc in info:
        inventory.append( (desc, "ra4e_sensor_temp_defaultlevels") )
    import pprint ; pprint.pprint(info)
    return inventory

def check_ra4e_sensor_temp(item, params, info):
    for tempc, tempf, desc in info:
        if desc == item:
            warn, crit = params
            temp = tempc/100
            if tempc != "" and tempf != "":
                infotext = "%.1f " % temp + "C (warn/crit at %.1f/%.1f " % (warn, crit) + "C)"
                perfdata = [ ( "temperature", temp, warn, crit ) ]
                if temp >= crit:
                    return (2, "Temperature is: " + infotext, perfdata)
                elif temp >= warn:
                    return (1, "Temperature is: " + infotext, perfdata)
                else:
                    return (0, "Temperature is: " + infotext, perfdata )
            else:
                return (3, "Sensor is offline")
    return (3, "Sensor not found")

check_info["ra4e_sensor_temp"] = {
    'check_function':          check_ra4e_sensor_temp,
    'inventory_function':      inventory_ra4e_sensor_temp,
    'service_description':     'Temperature %s',
    'has_perfdata':            True,
    'snmp_info':               (
        ".1.3.6.1.4.1.20916.1.6.1.2.1", [
            1, #digital-sen1 - Degrees in Celsius
            2, #digital-sen1 - Degrees in Fahrenheit
            6, #digital-sen1 - Description 
        ],
    ),
    'snmp_scan_function':      \
         lambda oid: "Room Alert" in oid(".1.3.6.1.2.1.1.1.0"),
    'group':                   'room_temperature',
}


#.1.3.6.1.2.1.1.1.0 = STRING: Room Alert 4E v3.1.1

#.1.3.6.1.4.1.20916.1.6.1.1.1.1.0 = INTEGER: 6807
#.1.3.6.1.4.1.20916.1.6.1.1.1.2.0 = INTEGER: 2004
#.1.3.6.1.4.1.20916.1.6.1.1.2.1.0 = STRING: "Internal"
#.1.3.6.1.4.1.20916.1.6.1.2.1.1.0 = INTEGER: 2080 Temp C
#.1.3.6.1.4.1.20916.1.6.1.2.1.2.0 = INTEGER: 6944 Temp F
#.1.3.6.1.4.1.20916.1.6.1.2.1.3.0 = INTEGER: 6035 Relative Humidity
#.1.3.6.1.4.1.20916.1.6.1.2.1.4.0 = INTEGER: 6944 Temp F
#.1.3.6.1.4.1.20916.1.6.1.2.1.5.0 = INTEGER: 2080 Temp C
#.1.3.6.1.4.1.20916.1.6.1.2.1.6.0 = STRING: "RTS DC"
#.1.3.6.1.4.1.20916.1.6.1.3.1.0 = INTEGER: 0
#.1.3.6.1.4.1.20916.1.6.1.3.2.0 = STRING: "Sensor 4"
#.1.3.6.1.4.1.20916.1.6.3.1.0 = ""

