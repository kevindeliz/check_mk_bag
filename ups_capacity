#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


# SNMPv2-SMI::mib-2.33.1.1.1.0 = STRING: "GE"
# SNMPv2-SMI::mib-2.33.1.1.2.0 = STRING: "SitePro"
# SNMPv2-SMI::mib-2.33.1.1.3.0 = STRING: "2.12"
# SNMPv2-SMI::mib-2.33.1.1.4.0 = STRING: "GEDE CP5 SNMP/Web Interface Ver.1.0 (2008/05/09)"
# SNMPv2-SMI::mib-2.33.1.1.5.0 = STRING: "GEDE_SNMP_UPS_Interface"
# SNMPv2-SMI::mib-2.33.1.1.6.0 = STRING: "UPS attached device"
# SNMPv2-SMI::mib-2.33.1.2.1.0 = INTEGER: 2
# SNMPv2-SMI::mib-2.33.1.2.2.0 = INTEGER: 0
# ==> Remaining capacity in estimated minutes
# SNMPv2-SMI::mib-2.33.1.2.3.0 = INTEGER: 150
# SNMPv2-SMI::mib-2.33.1.2.4.0 = INTEGER: 100 <-- Battery percentages
# SNMPv2-SMI::mib-2.33.1.2.5.0 = INTEGER: 4080
# SNMPv2-SMI::mib-2.33.1.2.6.0 = INTEGER: 0
# SNMPv2-SMI::mib-2.33.1.2.7.0 = INTEGER: 23
# SNMPv2-SMI::mib-2.33.1.3.1.0 = Counter32: 13
# SNMPv2-SMI::mib-2.33.1.3.2.0 = INTEGER: 3

#ups_capacity_defaul_levels = (0, 0)
ups_capacity_default_levels = { 'battime': (0, 0), 'capacity': (95, 90) }

def inventory_ups_capacity(info):
    if len(info) > 0:
        return [(None, 'ups_capacity_default_levels')]

def check_ups_capacity(item, params, info):
    # To support inventories with the old version
    if type(params) is tuple:  # old format with 2 params in tuple
        warn, crit = params
        cap_warn, cap_crit =  (95, 90)
    elif type(params) is dict:  # new dict format
        warn,crit = params.get('battime',(0,0))
        cap_warn,cap_crit = params.get('capacity',(95,90))
    else:
        warn, crit = (0, 0)
        cap_warn, cap_crit =  (95, 90)

    time_on_bat, minutes_left, percent_fuel = map(int, info[0])
    perf = [
      ('capacity', minutes_left, warn, crit),
      ('percent', percent_fuel),
    ]

    state = 0
    time_label = ""
    cap_label = ""
    if time_on_bat > crit:
        state = 2
        time_label = "On battery since %ds(%ds/%dss)(!!), " % time_on_bat, warn, crit
        #return(2, "On battery since %ds(!!) " % time_on_bat + info_text, perf)
    elif time_on_bat > warn:
        state = 1
        time_label = "On battery since %ds(%ds/%dss)(!)" % time_on_bat, warn, crit
        #return(1, "On battery since %ds(!) " % time_on_bat + info_text, perf)
    if percent_fuel < cap_crit:
        state = 2
        cap_label = "(!!)"
    elif percent_fuel < cap_warn:
        state = 1
        cap_label = "(!)"

    info_text = "%sremaining capacity %dmin, percentage %d%% (%d/%d) %s" \
        % (time_label, minutes_left, percent_fuel, cap_warn, cap_crit, cap_label )
    return(state, info_text, perf)


check_info["ups_capacity"] = {
    "check_function"        : check_ups_capacity,
    "inventory_function"    : inventory_ups_capacity,
    "service_description"   : "Battery capacity",
    "has_perfdata"          : True,
    "group"                 : "ups_capacity",
    "snmp_info"             : ( ".1.3.6.1.2.1.33.1.2", [ "2.0" , "3.0" ,"4.0" ] ),
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0") in \
                            [ ".1.3.6.1.4.1.534.1", ".1.3.6.1.4.1.705.1", ".1.3.6.1.4.1.818.1.100.1.1",
                              ".1.3.6.1.2.1.33", ".1.3.6.1.2.1.33.2", ".1.3.6.1.4.1.5491.6",
                              ".1.3.6.1.4.1.476.1.42" ]
}
